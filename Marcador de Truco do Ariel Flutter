// Importa o pacote de widgets/material do Flutter
import 'package:flutter/material.dart';

// Função principal que inicializa a aplicação
void main() {
  // Inicia a aplicação chamando o widget ScoreKeeperApp
  runApp(ScoreKeeperApp());
}

// Classe ScoreKeeperApp que representa a aplicação
class ScoreKeeperApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Retorna um MaterialApp, que é a estrutura básica de uma aplicação Flutter
    return MaterialApp(
      // Define o título da aplicação
      title: 'Score Keeper',
      // Define o tema da aplicação
      theme: ThemeData(
        primarySwatch: Colors.blue, // Cor principal
      ),
      // Define o widget inicial da aplicação como ScoreKeeperScreen
      home: ScoreKeeperScreen(),
    );
  }
}

// Classe ScoreKeeperScreen que representa a tela principal da aplicação
class ScoreKeeperScreen extends StatefulWidget {
  @override
  _ScoreKeeperScreenState createState() => _ScoreKeeperScreenState();
}

// Classe que representa o estado da tela ScoreKeeperScreen
class _ScoreKeeperScreenState extends State<ScoreKeeperScreen> {
  // Variáveis para armazenar a pontuação das equipes A e B
  int scoreTeamA = 0;
  int scoreTeamB = 0;

  // Método para incrementar a pontuação da equipe A
  void _incrementScoreTeamA() {
    setState(() {
      // Verifica se a pontuação da equipe A é menor que 12
      if (scoreTeamA < 12) {
        // Incrementa a pontuação da equipe A
        scoreTeamA++;
      }
    });
  }

  // Método para decrementar a pontuação da equipe A
  void _decrementScoreTeamA() {
    setState(() {
      // Verifica se a pontuação da equipe A é maior que 0
      if (scoreTeamA > 0) {
        // Decrementa a pontuação da equipe A
        scoreTeamA--;
      }
    });
  }

  // Método para incrementar a pontuação da equipe B
  void _incrementScoreTeamB() {
    setState(() {
      // Verifica se a pontuação da equipe B é menor que 12
      if (scoreTeamB < 12) {
        // Incrementa a pontuação da equipe B
        scoreTeamB++;
      }
    });
  }

  // Método para decrementar a pontuação da equipe B
  void _decrementScoreTeamB() {
    setState(() {
      // Verifica se a pontuação da equipe B é maior que 0
      if (scoreTeamB > 0) {
        // Decrementa a pontuação da equipe B
        scoreTeamB--;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    // Retorna a estrutura da tela utilizando o Scaffold
    return Scaffold(
      // Define o AppBar da tela
      appBar: AppBar(
        // Título do AppBar
        title: Text('Score Keeper'),
      ),
      // Corpo da tela
      body: Center(
        // Widget centralizado que contém uma coluna
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Container para exibir a pontuação da equipe A
            Container(
              padding: EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.blueGrey, // Cor de fundo
                borderRadius: BorderRadius.circular(16), // Borda arredondada
              ),
              child: Column(
                children: <Widget>[
                  // Título "Equipe A"
                  Text(
                    'Equipe A',
                    style: TextStyle(fontSize: 24, color: Colors.white),
                  ),
                  // Linha contendo botões e pontuação da equipe A
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: <Widget>[
                      // Botão para decrementar a pontuação da equipe A
                      IconButton(
                        icon: Icon(Icons.remove),
                        onPressed: _decrementScoreTeamA,
                        color: Colors.white,
                      ),
                      // Texto com a pontuação da equipe A
                      Text(
                        '$scoreTeamA',
                        style: TextStyle(fontSize: 40, color: Colors.white),
                      ),
                      // Botão para incrementar a pontuação da equipe A
                      IconButton(
                        icon: Icon(Icons.add),
                        onPressed: _incrementScoreTeamA,
                        color: Colors.white,
                      ),
                    ],
                  ),
                ],
              ),
            ),
            SizedBox(height: 20), // Espaçamento entre os contêineres
            // Container para exibir a pontuação da equipe B
            Container(
              padding: EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.deepOrange, // Cor de fundo
                borderRadius: BorderRadius.circular(16), // Borda arredondada
              ),
              child: Column(
                children: <Widget>[
                  // Título "Equipe B"
                  Text(
                    'Equipe B',
                    style: TextStyle(fontSize: 24, color: Colors.white),
                  ),
                  // Linha contendo botões e pontuação da equipe B
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: <Widget>[
                      // Botão para decrementar a pontuação da equipe B
                      IconButton(
                        icon: Icon(Icons.remove),
                        onPressed: _decrementScoreTeamB,
                        color: Colors.white,
                      ),
                      // Texto com a pontuação da equipe B
                      Text(
                        '$scoreTeamB',
                        style: TextStyle(fontSize: 40, color: Colors.white),
                      ),
                      // Botão para incrementar a pontuação da equipe B
                      IconButton(
                        icon: Icon(Icons.add),
                        onPressed: _incrementScoreTeamB,
                        color: Colors.white,
                      ),
                    ],
                  ),
                ],
              ),
            ),
            // Condição para exibir mensagem de fim de jogo se uma equipe alcançar 12 pontos
            if (scoreTeamA == 12 || scoreTeamB == 12)
              Text(
                'Fim do jogo!',
                style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
              ),
          ],
        ),
      ),
    );
  }
}
